############################### CREAKS Granular Mix ########################################
Creaks Granular Mix
  HighHarmonics

Description: Creaks Granular Mix uses livecoding with prepared code. It is based on patterns prepared previously for Creaks.tidal. A quasi granular synthesis texture is created by combining multiple variants of the same pattern. Each pattern has prepared parameter options that are enabled or disabled during live rendition (via code comments). This mix further builds texture by adding a VST filter to each Tidal channel. This is done via multi-channel routing into MaxMSP, where Max is used as a VST host and mixing tool. Multi-section form is established by moving through each set of patterns - creating transitions, and finding interesting ways to combine patterns.

Sound source: - SuperDirt samples: ades2, yeah, peri, reverbkick, db-lt-mt-sn

Mix Setup
Tidal -> SuperDirt/SuperCollider -> Loopback device -> MaxMSP (24 chan / 12 st tracks)
	-> FabFilter Pro Q3 vst plugin -> LoopBack -> OBS & Monitors

Max patch: orbitsChannelMixer-CreaksGran
		vst: FabFilter Pro Q3 (eq filter banks) per channel + master reverb (FabFilter Pro R)
		MIDI controller for track volume and pan

#########################################################################################
Pattern Name          Chans       FF-snapshot/sample bank
----------------------------------------------------
1. Swirls             d1, d2      Ades2-High
2. Sweeps             d3, d4      Ades2-High-Sweep
3. Sparks             d9, d10     Yeah
4. Shimmer            d5, d6, d7  Peri
5. Echo Loops         d8          Ades2-Low
6. Jerky              d2, d1      Peri-Low
7. ReverbKick Pulse   d12         Bd
9. Low Drums          d11         Bd (ht-lt)

Performance Path: t5 (establish a unquie path for each rendition)
Swirls -> EchoLoops -> Sweeps -> Sparks -> EchoLoops -> Shimmer -> EchoLoops ->
  ReverbKick / Jerky -> ReverbKick / Sparks + Low Drums -> fade out ReverbKick,
  -> Swirls + ...

YouTube: rendition t5: https://www.youtube.com/watch?v=o3ySbbwSw2Q
############################################################
setcps (135/60/4)
############################################################
1. SWIRLS

######## ADES2 - HIGH d1 d2 ################################

d1 $ n "1!2 4!3 5!2 7!4 ~ 10!4 14!2 15!3 11!2" # s "ades2"
-- d1 $ n "1!2 ~ 4!3 5!<1 4> 7!4 ~ 10!<1 3> 14!2 ~ 15!3 11!<1 3>" # s "ades2" -- slight irregular
-- d1 $ every 2 (mask ("1 1 0 1 0")) $ n "1!2 ~ 4!3 5!<1 4> 7!4 ~ 10!4 14!<1 4> ~ 15!3 11" # s "ades2" -- more gaps
  #speed "0.8"
  #freq ((rand * "520") + 250) -- (irand 400 + 100))
  -- #freq ((rand * 250) + 200)
  --  #freq "[220!5 350!7 140!2 880!4 550]"
  #amp (slow 7 $ range 0.1 0.8 $ sine) -- fade in and out
  -- #amp "0.2!4 0.9!2 0.4!2 0.6!2"
  #pan (perlin)
  -- #pan (slow 4 $ range 0.05 0.95 $ sine)
  #room 0.8 # size 0.7 # dry 0.4
  -- #comb (slow 3 $ range 0.01 0.9 $ sine)
  #orbit 0

d2 $ n "1!2 ~ 4!3 5!1 7!4 ~ 10!4 14!2 ~ 15!3 11" # s "ades2"
-- d2 $ every 2 (degradeBy 0.3) $ n "1!2 ~ 4!3 5!1 7!4 ~ 10!4 14!2 ~ 15!3 11" # s "ades2"
  #speed 0.5
  -- #freq ((rand * 250) + 200)
  -- #freq "[220!5 350!7 140!2 880!4 550]"
  #freqTake "sValFreq" [100, 120, 145, 170, 200, 170, 145, 200, 240, 270, 300] --
  #amp (slow 4 $ range 0.02 0.8 $ sine)
  -- #amp "0.1!4 0.9!2 0.2!2 0.6!3"
  #pan (perlin)
  -- #pan (slow 4 $ range 0.05 0.95 $ sine)
  #room 0.8 # size 0.7 # dry 0.4
  -- #comb (slow 3 $ range 0.01 0.9 $ sine)
  #orbit 1

d1 $ silence
d2 $ silence
xfadeIn 1 2 $ silence
xfadeIn 2 2 $ silence

########################################################
2. SWEEPS (add comb)
start: fade in d4 w every 1 mask, then every 2, 3
add d3, switch d4 to 2nd line
change #amp to change pulsation
######## ADES2-HIGH-SWEEP d3 d4 ################################

d3 $ n "[1*7 8*5 7*7 4*5 6*7]" # s "ades2"
-- d3 $ every 3 (mask "1*2 0*7 1*9 1*8") $ s "ades2:2*14 ades2:5*16 ades2:7*10"
  #speed (rand * 0.5 + 0.7)
  #freq "380*1 450*2 300*1"
  #room 1 # size 0.7 # dry 0.4
  -- #amp "0.2*4 1.2*4 0.5*3 0.8*4"
  #amp (slow 2 $ range 0.05 0.7 $ saw)
  #pan (slow 4 $ range 0 1 $ sine)
  -- #comb (slow 4 $ range 0.01 0.4 $ sine)
  #orbit 2

d4 $ every 1 (mask "1 1 0 0 1 0 1 1 0 0") $ s "ades2:2*11 ades2:5*8 ades2:7*7"
-- d4 $ n "[8*7 2*5 4*7 7*5 6*5]" # s "ades2"
  #speed (rand * 1.2 + 0.3)
  -- #freq "280 420 350 100" -- slows down and more sporadic
  #begin 0 #end 0.5
  #room 1 # size 0.7 # dry 0.4
  -- #amp "0.2*4 1.2*4 0.5*3 0.8*4"
  #amp (slow 6 $ range 0.1 0.8 $ sine)
  #pan (fast 2 $ range 0 1 $ sine)
  -- #comb (slow 4 $ range 0.1 0.4 $ sine)
  #orbit 3

d3 silence
d4 silence
xfadeIn 3 4 $ silence
xfadeIn 4 4 $ silence

########################################################
3. ELECTRONIC SPARKS
STRIPE: 1 = relaxed, 2 = frantic
> #end = more electronic sounds emerge
######## YEAH d9 d10  ################################

d9 $ stripe 1 $ mask "1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 0 1 1 0 1 1 1" $ n "{2!4 9!4 0!4 4!4 5!4 3!4}%15" # s "yeah"
  #speed (rand + 0.7)
  #freq "[450 700 200 500 800]"
  -- #freq 100
  -- #freq "[100 80 120 110 90]"
  #begin 0.1 #end 0.4
  #room 0.7 # size 0.6 # dry 0.4
  #amp "1!2 0.1!4 0.5!2 0.2!2"
  -- #amp "0.1!4 0.5!2 0.9!2 0.2!2"
  #pan (fast 1 $ range 0.2 0.8 $ sine)
  #orbit 8

d10 $ stripe 1 $ mask "1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1" $ n "{2!4 9!4 0!4 4!4 5!4 3!4}%16" # s "yeah"
  #speed (rand + 0.7)
  --  #freq "[450 700 200 500 800]"
  -- #freq 1200
  -- #freq "[100 80 120 110 90]"
  -- #cat [freq ((irand 100) + 150), freq "[220 200 240 280]!3"]
  #begin 0 #end 0.4
  #room 0.7 # size 0.6 # dry 0.4
  #amp "0.2!4 1!2 0.1!4 0.5!1"
  #pan 0.5
  #orbit 9

d9 silence
d10 silence
xfadeIn 9 3 $ silence
xfadeIn 10 3 $ silence

########################################################
4. SHIMMER
#hresonance adds freq sweep
######## PERI d5 d6 d7 ################################

d5 $ jux (rev) $ hurry 1.4 $ n "2 .. 14" # s "peri"
  #speed (range 0.5 1 $ sine)
  #begin 0.01 #end 0.1
  #hcutoff (slow 4 $ range 400 2500 $ sine)
  -- #hresonance (slow 4 $ range 0 0.4 $ sine)
  #room 0.5 # size 0.6 # dry 0.4
  #amp (slow 8 $ range 0.01 0.9 $ sine)
  #orbit 4

d6 $ jux (rev) $ hurry 1.5 $ n "2 .. 14" # s "peri"
  #speed (range 0.4 0.8 $ sine)
  #freq "<200!2 400!2>"
  #begin 0.1 #end 0.2
  #hcutoff (slow 3 $ range 200 2000 $ sine)
  #hresonance (fast 2 $ range 0.1 0.3 $ sine)
  #room 0.5 # size 0.6 # dry 0.4
  #amp (slow 9 $ range 0.1 0.8 $ sine)
  #orbit 5

d7 $ jux (rev) $ hurry 1.6 $ n "2 .. 14" # s "peri"
  #speed (range 1 1.5 $ sine)
  #begin 0.12 #end 0.2
  #hcutoff (slow 3 $ range 500 2000 $ sine)
  #hresonance (fast 0.5 $ range 0.2 0.4 $ sine)
  #room 0.5 # size 0.6 # dry 0.4
  #amp (slow 4 $ range 0.2 0.8 $ sine)
  #orbit 6

d5 silence
d6 silence
d7 silence
xfadeIn 5 3 $ silence
xfadeIn 6 4 $ silence
xfadeIn 7 3 $ silence

########################################################
5. ECHO LOOPS - mid-range, circling long loop (8 cycles? in 3 meter)
 > speed adds harmonics
 remove vowel - brighter sound, vary vowel repeats
######## ADES2 LOW d8 ################################

d8 $ hurry 2 $ off 0.3 (#freq "100 200 50") $ jux (rev) $ n "0 .. 8" # s "ades2"
  -- #speed (slow 8 $ range 0.5 2 $ sine)
  #freq "<100 200 400 800 400 200>"
  #begin 0 #end 0.2
  #vowel "<e i a u>!1"
  #room 0.8 # size 0.7 # dry 0.4
  #amp (slow 8 $ range 0.01 1 $ isaw)
  #orbit 7

d8 silence
xfadeIn 8 3 $ silence

########################################################
6. JERKY
use degradeBy lines for transition
######## PERI-LOW d3 d4 ################################

d3 $ n "{< [2 6 9 4 8 14 11 13] [5 [6 12 2] 6] >}%3" # s "peri"
-- d2 $ every 2 (degradeBy 0.4) $ n "{< [2 6 9 4 8 14 11 13] [5 [6 12 2] 6] >}%3" # s "peri"
-- d2 $ every 2 (juxBy 0.8 (hurry 1.2)) $ n "{< [2 6 9 4 8 14 11 13] [5 [6 ~!2 2] 6] >}%3" # s "peri"
  #speed (rand * 1.2 + 1)
  -- #freq "220 350 170 420"
  #freq "600 700 880 500 1200"
  #begin 0 #end 0.9
  #room 0.8 # size 0.7 # dry 0.4
  #amp (slow 6 $ range 0.04 0.5 $ saw)
  #orbit 2

d4 $ n "{< [13 4 8 9 11 13] [12 [6 10 7 2] 6 2 1] >}%3.5" # s "peri"
-- d1 $ every 3 (degradeBy 0.2) $ n "{< [13 4 8 9 11 13] [12 [6 10 7 2] 6 2 1] >}%2.5" # s "peri"
  #speed (rand * 1.1 + 0.9)
  #cat [freq "[350 400 420]!2", freq "[800]*4"]
  #begin 0 #end 0.3
  #room 0.8 # size 0.7 # dry 0.4
  #amp (slow 4 $ range 0.01 0.4 $ sine)
  #orbit 3

d3 silence
d4 silence
clutchIn 3 4 $ silence
clutchIn 4 4 $ silence

########################################################
REVERBKICK PULSE - slow pulse
change mask values to change rhythm
######## reverbkick d12  ################################

d12 $ every 1 (mask ("1 0 0 0 0")) $ n "0!5 " # s "reverbkick"
-- d12 $ echo 3 0.5 0.7 $ every 2 (mask "1 0 1 0 1") $ n "0!5 " # s "reverbkick"
-- d12 $ every 4 (#silence) $ echo 3 0.5 0.7 $ every 2 (mask "1 0 1 0 1") $ n "0!5 " # s "reverbkick"
  -- #lpf (fast 4 $ range 500 4000 $ sine)
  -- #lpq (slow 2 $ range 0.4 0.8 $ sine)
  #speed "0.7 0.8 0.9 1 2" -- regular meter
  -- #speed (rand * 1.5 + 0.5) -- irregular meter
  #freq "200 350 500"
  #amp "0.5"
  #room 0.8 # size 0.7 # dry 0.4
  -- #delay 0.5 # delaytime 0.4 # delayfeedback 0.4
  #orbit 11

d12 $ silence
xfadeIn 12 4 $ silence
########################################################
LOW DRUMS
change masking to get new rhythms
######## Low Drums d11  ################################

d11 $ every 1 (mask "1 0 1 1 0 0 0 0 0 0") $ sound "lt*20"
-- d11 $ every 2 (mask "1 0 0 1 0 1 0") $ sound "bd*20"
  #speed (fast 4 $ range 2 0.4 $ tri)
  -- #speed "1.4!8 2!5 0.9 0.5"
  -- #freq "500 600 800 200 1200"
  #freq (rand * 1000 + 140)
  #amp (slow 4 $ range 0.01 0.3 $ sine)
  -- #amp "0.5!4 0.1!2 0.35!4"
  -- #pan (slow 3 $ range 0 1 $ sine)
  #room 0.7 # size 0.6 # dry 0.3
  #orbit 10

xfadeIn 11 4 $ every 2 (mask "1 1 0 1 0 1 1 0 1 0 1") $ sound "lt*5 ~ mt*4 ~ bd*5 sn*4"
  #speed (fast 2 $ range 3 0.5 $ tri)
  #freq ((irand 500) + 200)
  -- #freq "500 600 800 200 1000"
  #amp (slow 8 $ range 0.01 0.4 $ sine)
  -- #amp "0.5!4 0.1!2"
  #pan (slow 3 $ range 0 1 $ sine)
  #room 0.7 # size 0.6 # dry 0.3
  #orbit 10

d11 $ silence
xfadeIn 11 4 $ silence

###################################################
hush
################################################################################
#####################################################################################
